// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define TRML(k1,k2,k3) &ht LGUI k1  &ht LALT k2  &ht LCTRL k3
#define TRMR(k1,k2,k3) &ht RCTRL k1  &ht RALT k2  &ht RGUI k3

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <350>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
        fx0: fx0 {
            compatible = "zmk,behavior-tap-dance";
            label = "FX0";
            #binding-cells = <0>;
            bindings = <&kp F10>, <&kp F20>;
        };
        fx1: fx1 {
            compatible = "zmk,behavior-tap-dance";
            label = "FX1";
            #binding-cells = <0>;
            bindings = <&kp F1>, <&kp F11>, <&kp F21>;
        };
        fx2: fx2 {
            compatible = "zmk,behavior-tap-dance";
            label = "FX2";
            #binding-cells = <0>;
            bindings = <&kp F2>, <&kp F12>, <&kp F22>;
        };
        fx3: fx3 {
            compatible = "zmk,behavior-tap-dance";
            label = "FX3";
            #binding-cells = <0>;
            bindings = <&kp F3>, <&kp F13>, <&kp F23>;
        };
        fx4: fx4 {
            compatible = "zmk,behavior-tap-dance";
            label = "FX4";
            #binding-cells = <0>;
            bindings = <&kp F4>, <&kp F14>, <&kp F24>;
        };
        fx5: fx5 {
            compatible = "zmk,behavior-tap-dance";
            label = "FX5";
            #binding-cells = <0>;
            bindings = <&kp F5>, <&kp F15>;
        };
        fx6: fx6 {
            compatible = "zmk,behavior-tap-dance";
            label = "FX6";
            #binding-cells = <0>;
            bindings = <&kp F6>, <&kp F16>;
        };
        fx7: fx7 {
            compatible = "zmk,behavior-tap-dance";
            label = "FX7";
            #binding-cells = <0>;
            bindings = <&kp F7>, <&kp F17>;
        };
        fx8: fx8 {
            compatible = "zmk,behavior-tap-dance";
            label = "FX8";
            #binding-cells = <0>;
            bindings = <&kp F8>, <&kp F18>;
        };
        fx9: fx9 {
            compatible = "zmk,behavior-tap-dance";
            label = "FX9";
            #binding-cells = <0>;
            bindings = <&kp F9>, <&kp F19>;
        };
    };

    combos {
        compatible = "zmk,combos";
        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <22 23>;
            layers = <0 1 2>;
        };
        backspace_wd {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <23 22 21>;
            layers = <0 1 2>;
        };
        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <20 21 22 23>;
            layers = <0 1 2>;
        };
        delete {
            bindings = <&kp DELETE>;
            key-positions = <24 23>;
            layers = <0 1 2>;
        };
        delete_wd {
            bindings = <&kp LC(DELETE)>;
            key-positions = <24 23 22>;
            layers = <0 1 2>;
        };
        cut {
            bindings = <&kp LC(X)>;
            key-positions = <25 26>;
            layers = <0 1 2>;
        };
        copy {
            bindings = <&kp LC(INSERT)>;
            key-positions = <26 27>;
            layers = <0 1 2>;
        };
        paste {
            bindings = <&kp LS(INSERT)>;
            key-positions = <26 27 28>;
            layers = <0 1 2>;
        };
        paste_h {
            bindings = <&kp LG(V)>;
            key-positions = <26 27 28 29>;
            layers = <0 1 2>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                &kp Q    TRML( D,         R,         W)     &kp B         &kp J      TRMR(F,         U,         P)    &kp SQT
                &kp A      &kp S      &kp H      &kp  T     &kp G          &kp Y      &kp N      &kp E      &kp O     &kp I
                &kp Z      &kp X      &kp M      &kp C      &kp V          &kp K      &kp L      &kp COMMA  &kp DOT   &kp FSLH
                                                 &kp LSHFT  &mo 1          &mo 2      &kp SPACE
            >;
        };

        right_layer {
            bindings = <
                &kp EXCL   &mt LEFT_GUI AT  &mt LALT LBRC         &mt LCTRL RBRC         &kp PRCNT        &kp PLUS    &mt RCTRL N7  &mt RALT N8  &mt RIGHT_GUI N9  &kp ASTERISK
                &kp MINUS  &kp DLLR         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE         &kp MINUS   &kp N4        &kp N5       &kp N6            &kp N0
                &kp EQUAL  &kp HASH         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AMPERSAND    &kp PERIOD  &kp N1        &kp N2       &kp N3            &kp FSLH
                                                                  &trans                 &trans           &trans      &trans
            >;
        };

        left_layer {
            bindings = <
                &kp LS(EXCL)   &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &trans   &kp HOME   &kp UP    &kp END    &trans
                &kp MINUS      &kp EQUAL     &kp SEMI       &kp GRAVE     &kp LS(PIPE)     &kp TAB  &kp LEFT   &kp DOWN  &kp RIGHT  &kp RET
                &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(PLUS)  &kp BSLH         &trans   &kp PG_UP  &trans    &kp PG_DN  &trans
                                                            &trans        &trans           &trans   &trans
            >;
        };

        tri_layer {      
            bindings = <
           &sys_reset  &trans     &trans     &trans    &bt BT_SEL 0    &trans     &fx7     &fx8     &fx0    &sys_reset
            &trans     &trans     &trans     &trans    &bt BT_SEL 1    &trans     &fx4     &fx5     &fx6    &fx0
          &bootloader  &trans     &trans    &bt BT_CLR &bt BT_SEL 2    &trans     &fx1     &fx2     &fx3    &bootloader
                                             &trans     &trans         &trans     &trans
            >;
        };
    };
};
